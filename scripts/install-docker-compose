#!/usr/bin/env bash

set -e

# global path: /usr/local/lib/docker/cli-plugins
mkdir -p ~/.docker/cli-plugins/
PLUGINS=~/.docker/cli-plugins/

__REMOTE_VER=$(curl --silent --show-error --fail --location https://api.github.com/repos/docker/compose/releases/latest | jq -r '.name')
__LOCAL_VER=""
[[ -f "${PLUGINS}/docker-compose" ]] && \
  __LOCAL_VER=$("${PLUGINS}/docker-compose" version | awk '{ print $4 }')

if [[ $__REMOTE_VER == $__LOCAL_VER ]]; then
  echo "docker compose is updated to ${__REMOTE_VER}";
  exit 0
fi

printf "Updating    \e[1;34mdocker-compose\e[0m from    \e[1;34m%s\e[0m to \e[1;34m%s\e[0m\n" "${__LOCAL_VER}" "${__REMOTE_VER}"
printf "Downloading \e[1;34mdocker-compose\e[0m version \e[1;34m%s\e[0m under ${PLUGINS} ... " $__REMOTE_VER
[[ -f "${PLUGINS}/docker-compose.new" ]] && rm -f "${PLUGINS}/docker-compose.new"

curl \
  --silent \
  --show-error \
  --fail \
  --location \
  "https://github.com/docker/compose/releases/download/${__REMOTE_VER}/docker-compose-linux-x86_64" \
  -o "${PLUGINS}/docker-compose.new"

[[ -f "${PLUGINS}/docker-compose" ]] && rm -f "${PLUGINS}/docker-compose"
mv "${PLUGINS}/docker-compose.new" "${PLUGINS}/docker-compose"
chmod +x "${PLUGINS}/docker-compose"
printf "\e[1;32mDone\e[0m\n"
