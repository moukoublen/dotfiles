#!/usr/bin/env bash

set -e

# JS_BODY=$(curl --show-error --silent --fail --location https://api.github.com/repos/elastic/elastic-package/releases/latest)

__remote_version() {
  local JS_BODY="${1}"
  echo "${JS_BODY}" | jq -r '.tag_name'
}
export -f __remote_version

__local_version() {
  local BIN_DIR="${1:-/usr/local/bin}"
  [[ -f "${BIN_DIR}"/elastic-package ]] && "${BIN_DIR}"/elastic-package version | awk '{ print $2 }'
}
export -f __local_version

__get_dl_url() {
  local JS_BODY="${1}"

  local arch
  arch="$(uname -m)"
  if [[ "${arch}" == "x86_64" ]]; then
    arch="amd64"
  fi

  local ends_with
  ends_with=$(echo "$(uname -s)_${arch}.tar.gz" | tr '[:upper:]' '[:lower:]')
  echo "${JS_BODY}" | jq -r ".assets[] | select(.name | test(\"${ends_with}\$\")) | .browser_download_url"
}
export -f __get_dl_url

__install_exec() {
  local BIN_DIR
  local DOWNLOADED_FULL_PATH
  local TMP_DIR
  BIN_DIR="${1}"
  DOWNLOADED_FULL_PATH="${2}"
  TMP_DIR="$(dirname "${DOWNLOADED_FULL_PATH}")"

  # extract
  tar -xzf "${DOWNLOADED_FULL_PATH}" --directory "${TMP_DIR}"

  # install binary
  sudo cp "${TMP_DIR}"/elastic-package "${BIN_DIR}"/elastic-package
  sudo chmod +x "${BIN_DIR}"/elastic-package
  if [[ $(uname) = "Darwin" ]]; then
    sudo xattr -r -d com.apple.quarantine "${BIN_DIR}"/elastic-package
  fi

  # install bash autocompletion
  if [[ -d "${HOME}"/.bashrc.d/ ]]; then
    "${BIN_DIR}"/elastic-package completion bash > "${HOME}"/.bashrc.d/elastic-package-completion.bash
  fi
}
export -f __install_exec


install-from-github  \
  --name                 "elastic-package" \
  --repo                 "elastic/elastic-package" \
  --fn-remote-version    "__remote_version" \
  --fn-local-version     "__local_version" \
  --fn-get-download-link "__get_dl_url" \
  --download-to-file     "elastic-package.tar.gz" \
  --fn-install           "__install_exec" \
  --destination          "/usr/local/bin" \
  "${@}"


# if command -v elastic-package 1>/dev/null 2>&1; then
#   source <(elastic-package completion bash)
# fi
