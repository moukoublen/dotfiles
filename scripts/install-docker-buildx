#!/usr/bin/env bash

set -e

mkdir -p ~/.docker/cli-plugins/
PLUGINS=~/.docker/cli-plugins/

__REMOTE_JSON=$(curl --silent --show-error --fail --location https://api.github.com/repos/docker/buildx/releases/latest)
__REMOTE_VER=$(echo $__REMOTE_JSON | jq -r '.name')
__LOCAL_VER=$(docker buildx version | awk '{ print $2 }' | sed -e 's/-docker//g')

if [[ $__REMOTE_VER == $__LOCAL_VER ]]; then
  echo "docker buildx is updated to ${__REMOTE_VER}";
  exit 0
fi

__URL=$(echo $__REMOTE_JSON | jq -r '.assets[] | select(.name | endswith(".linux-amd64")) | .browser_download_url')

printf "Updating    \e[1;34mdocker buildx\e[0m from    \e[1;34m%s\e[0m to \e[1;34m%s\e[0m\n" "${__LOCAL_VER}" "${__REMOTE_VER}"
printf "Downloading \e[1;34mdocker buildx\e[0m version \e[1;34m%s\e[0m under ${PLUGINS} ... " $__REMOTE_VER

[[ -f "${PLUGINS}/buildx.new" ]] && rm -f "${PLUGINS}/buildx.new"

curl \
  --silent \
  --show-error \
  --fail \
  --location \
  "${__URL}" \
  -o "${PLUGINS}/buildx.new"

[[ -f "${PLUGINS}/docker-buildx" ]] && rm -f "${PLUGINS}/docker-buildx"
mv "${PLUGINS}/buildx.new" "${PLUGINS}/docker-buildx"
chmod +x "${PLUGINS}/docker-buildx"
printf "\e[1;32mDone\e[0m\n"
