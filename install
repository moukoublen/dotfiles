#!/usr/bin/env bash

#lovely stackoverflow https://stackoverflow.com/questions/59895/getting-the-source-directory-of-a-bash-script-from-within
abspth() {
  local drnm="$(dirname $1)"
  echo "$(cd -P $drnm && pwd)"
}

rlpth() {
  local SOURCE=$1
  while [ -h "$SOURCE" ]; do
    local DIR="$(abspth $SOURCE)"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE=$DIR/$SOURCE
  done
  echo "$(abspth $SOURCE)"
}

DIR="$(rlpth ${BASH_SOURCE[0]})"

echo "********************************************************"
echo "**************** Marmalade Installation ****************"
echo "  marmalade folder: $DIR"

if [ ! -f ~/.marmalade.bash ]; then
  echo "  create symlink of marmalade.bash at home folder"
  ln -s $DIR/marmalade.bash ~/.marmalade.bash
else
  echo "  marmalade syslink exists"
fi

BASH_FILE=~/.bashrc
[[ ! -f $BASH_FILE ]] && BASH_FILE=~/.bash_profile
[[ ! -f $BASH_FILE ]] && touch $BASH_FILE
echo "  file to be used: $BASH_FILE"

SOURCE_LINE='[[ -r ~/.marmalade.bash ]] && [[ -f ~/.marmalade.bash ]] && source ~/.marmalade.bash'
if grep --fixed-strings -q "$SOURCE_LINE" $BASH_FILE; then
  echo "  marmalade sourcing is already included in $BASH_FILE"
else
  echo "  add marmalade sourcing in $BASH_FILE"
  echo $SOURCE_LINE >> $BASH_FILE
fi

echo "********************************************************"
echo "********************************************************"

unset DIR
unset BASH_FILE
unset SOURCE_LINE
unset -f rlpth
unset -f abspth
