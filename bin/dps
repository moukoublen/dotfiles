#!/usr/bin/env node

const { exec } = require("child_process");


const printContainer = (c) => {
    //console.table(c);
};

const transform = (c) => {
    return {
        id: c.ID,
        image: c.Image,
        name: c.Names,
        state: c.State,
        status: c.Status,
        image: c.Image,
        ports: c.Ports.split(", ").filter(x => x !== ""),
        labels: c.Labels.split(",").filter(x => x !== ""),
    };
};



exec(`docker ps --all --no-trunc --format='{{json .}}'`, (error, stdout, stderr) => {
    if (error) {
        console.log(`error: ${error.message}`);
        return;
    }

    if (stderr) {
        console.log(`stderr: ${stderr}`);
        return;
    }

    const containers = stdout.split("\n").filter(x => x !== "").map(x => JSON.parse(x)).map(transform);

    //console.table(containers, ["id", "image", "name", "state", "ports"]);
    containers.forEach(x => {
        console.log(`id    : ${x.id}`);
        console.log(`image : ${x.image}`);
        console.log(`name  : ${x.name}`);
        console.log(`state : ${x.state}`);
        if (x.ports.length > 0) {
            console.log(`ports : ${x.ports[0]}`);
            x.ports.forEach((p, i) => {
                if (i===0) {
                    return;
                }
                console.log(`        ${p}`);
            })
        }
        // if (x.labels.length > 0) {
        //     console.log(`labels: ${x.labels[0]}`);
        //     x.labels.forEach((p, i) => {
        //         if (i===0) {
        //             return;
        //         }
        //         console.log(`        ${p}`);
        //     })
        // }
        console.log("");
    });
});
