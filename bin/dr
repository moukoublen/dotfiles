#!/usr/bin/env bash

# dr is a shortcut to execute `docker run` command with --rm --interactive --tty arguments prefilled.
#   eg: dr golang:1.23
# All arguments are passed to docker run except:
#   -R, --RO    which is translated to read-only `:ro` volume bind of the current directory
#   --ME        which is translated to `--user=$(id -u):$(id -g)`
#
# To enable `docker run` run (or put in ~/.bashrc or ~/.profile e.t.c.):
#
# source <(dr --completion)
#

__dr_bash_completion() {
  [[ "$(type -t _docker_container_run)" != "function" ]] &&
    [[ -f /usr/share/bash-completion/completions/docker ]] &&
    source /usr/share/bash-completion/completions/docker

  # shellcheck disable=SC2034
  local cur prev words cword
  _get_comp_words_by_ref -n : cur prev words cword
  _docker_container_run
}

READ_ONLY=""
MOUNT_PWD=""
USR=""
args=()

args+=('--rm')
args+=('--interactive')
args+=('--tty')

while (($#)); do
  case "${1}" in
    -R | --RO)
      READ_ONLY=":ro"
      shift
      ;;
    -H | --HERE)
      MOUNT_PWD="1"
      shift
      ;;
    --ME)
      USR="--user=$(id -u):$(id -g)"
      shift
      ;;
    --ROOT)
      USR='--user=0:0'
      shift
      ;;
    --completion)
      declare -f __dr_bash_completion
      echo ''
      echo 'complete -F __dr_bash_completion dr'
      exit 0
      ;;
    *)
      args+=("${1}")
      shift
      ;;
  esac
done

if [[ ${MOUNT_PWD} == "1" ]]; then
  FOLDER="/v/$(basename "${PWD}")"
  # prepend
  args=("--volume" "${PWD}:${FOLDER}${READ_ONLY}" --workdir "${FOLDER}" "${args[@]}")
fi

if [[ -n ${USR} ]]; then
  # prepend
  args=("${USR}" "${args[@]}")
fi

set -x
exec docker run "${args[@]}"
